!function(){"use strict";const e=[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],t={inputSelector:".modal__input",submitButtonSelector:".modal__save",inactiveButtonClass:"modal__save_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},s={editProfileButton:document.querySelector(".profile__edit-button"),addCardButton:document.querySelector(".profile__add-button")};var r=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_toggleButtonState(e,t){let s=!1;e.forEach((e=>{e.validity.valid||(s=!0)})),s?(t.classList.add(this._inactiveButtonClass),t.disabled=!0):(t.classList.remove(this._inactiveButtonClass),t.disabled=!1)}_setEventListeners(){this._inputElements=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState(this._inputElements,this._submitButton)}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputElements.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState(this._inputElements,this._submitButton)}},n=class{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._likeButton.classList.toggle("card__like-button_active")})),this._deleteButton.addEventListener("click",(()=>{this._element.remove()})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}getView(){return this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._cardImage=this._element.querySelector(".card__image"),this._cardTitle=this._element.querySelector(".card__title"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._setEventListeners(),this._element}};class o{constructor(e){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&(e.preventDefault(),this.close())}setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close-button"))&&this.close()}))}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}}class i extends o{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super(t),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=s,this._inputElements=this._popupElement.querySelectorAll(".modal__input")}getForm(){return this._popupForm}_getInputValues(){return this._inputValues={},this._inputElements.forEach((e=>{this._inputValues[e.name]=e.value})),this._inputValues}setInputValues(e){this._inputElements.forEach((t=>{e[t.name]&&(t.value=e[t.name])}))}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._inputValues=this._getInputValues(),this._handleFormSubmit(this._inputValues),this.close()}))}close(){super.close()}resetForm(){this._popupForm.reset()}}function a(e){const t=new n(e,"#card-template",(e=>{d.open({link:e.link,name:e.name})}));return t.getView()}const l=new class{constructor(e){let{baseUrl:t,authToken:s}=e;this._baseUrl=options.baseUrl,this._headers=options.headers}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)}))}getUserInfo(){return console.log("getUserInfo() is being called"),fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)}))}updateUserProfile(e,t){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:{...this._headers,"Content-Type":"application/json"},body:JSON.stringify({userName:e,userDescription:t})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)}))}addNewCard(e,t){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:{...this._headers,"Content-Type":"application/json"},body:JSON.stringify({name:e,link:t})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)}))}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)}))}dislikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)}))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)}))}loadUserInfoAndCards(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"625a4303-69f9-48ff-bb51-08f3ac7dbd7c","Content-Type":"application/json"}});l.loadUserInfoAndCards().then((e=>{let[t,s]=e;console.log("User Info:",t),console.log("Cards:",s)})).catch((e=>{console.error("Error loading data:",e)})),l.updateUserProfile("John Doe","Software Developer").then((e=>{console.log("Updated User Info:",e)})).catch((e=>{console.error("Error updating profile:",e)})),l.addNewCard("New Card","https://example.com/card.jpg").then((e=>{console.log("New Card Created:",e)})).catch((e=>{console.error("Error adding card:",e)}));const c=new i({popupSelector:"#edit-profile-modal",handleFormSubmit:e=>{h.setUserInfo(e)}}),u=new i({popupSelector:"#add-card-modal",handleFormSubmit:e=>{const t=a(e);m.addItem(t),u.resetForm()}}),d=new class extends o{constructor(e){super(e),this._image=this._popupElement.querySelector(".modal__preview-image"),this._caption=this._popupElement.querySelector(".modal__preview-caption")}open(e){let{link:t,name:s}=e;this._caption.textContent=s,this._image.src=t,this._image.alt=s,super.open()}}("#preview-image-modal"),h=new class{constructor(e){let{userNameSelector:t,userDescriptionSelector:s}=e;this._userNameElement=document.querySelector(t),this._userDescriptionElement=document.querySelector(s)}getUserInfo(){return{userName:this._userNameElement.textContent,userDescription:this._userDescriptionElement.textContent}}setUserInfo(e){let{userName:t,userDescription:s}=e;this._userNameElement.textContent=t,this._userDescriptionElement.textContent=s}}({userNameSelector:".profile__title",userDescriptionSelector:".profile__description"}),m=new class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:e,renderer:e=>{const t=a(e);m.addItem(t)}},".cards__list");m.renderItems(e);const _=new r(t,c.getForm()),p=new r(t,u.getForm());_.enableValidation(),p.enableValidation(),s.editProfileButton.addEventListener("click",(()=>{const{userName:e,userDescription:t}=h.getUserInfo();c.setInputValues({userName:e,userDescription:t}),_.resetValidation(),c.open()})),s.addCardButton.addEventListener("click",(()=>{p.resetValidation(),u.open()})),d.setEventListeners(),c.setEventListeners(),u.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,